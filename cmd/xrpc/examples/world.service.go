// Code generated by xrpc. DO NOT EDIT.
package main

import "github.com/yc90s/xrpc"
import "github.com/yc90s/xrpc/examples/protobuf/pb"


type IHelloPbService interface {
    Hello(*pb.String) (*pb.String, error)
    Add(*pb.String, *pb.String) (*pb.String, error)
}

func RegisterHelloPbServiceServer(rpc *xrpc.RPCServer, s IHelloPbService) {
	rpc.Register("Hello", s.Hello)
	rpc.Register("Add", s.Add)
}

type HelloPbServiceClient struct {
    c xrpc.IRPCClient
}

func NewHelloPbServiceClient(c xrpc.IRPCClient) *HelloPbServiceClient {
    return &HelloPbServiceClient{c: c}
}

func (c *HelloPbServiceClient) Close() {
	c.c.Close()
}

func (c *HelloPbServiceClient) Hello(subj string, arg0 *pb.String) (*pb.String, error) {
    var reply pb.String
    err := c.c.Call(subj, "Hello", &reply, arg0)
    return &reply, err
}
func (c *HelloPbServiceClient) Add(subj string, arg0 *pb.String, arg1 *pb.String) (*pb.String, error) {
    var reply pb.String
    err := c.c.Call(subj, "Add", &reply, arg0, arg1)
    return &reply, err
}